version: '3.7'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    command: npm run build
    depends_on:
      - backend
    ports: 
      - 3000:3000
    volumes:
      - ./frontend:/frontend:rw
      - ./frontend/out:/frontend/out:rw
      - /frontend/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
    stdin_open: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    ports: 
      - 3010:3010
    restart: always
    command: nodemon app.js
    volumes:
      - ./backend:/backend:rw
      - ./backend/dist:/backend/dist:rw
      - /backend/node_modules
    environment:
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_DATABASE: "${DB_DATABASE}"
      JWT_SECRET: "${JWT_SECRET}"
      ENC_PASS: "${ENC_PASS}"
      APP_USER: "${APP_USER}"
      APP_PASS: "${APP_PASS}"
      DB_SERVICE_NAME: "db"
    
  db:
    image: mongo:latest
    ports:
      - 27017:27017
    restart: always
    volumes:
      - mongodb_data_container:/data/db
    environment:
      MONGO_INITDB_DATABASE: "${DB_DATABASE}"
      MONGO_INITDB_ROOT_USERNAME: "${DB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${DB_PASSWORD}"
    logging:
      driver: "none"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    depends_on:
      - backend
      - frontend
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/prod/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/crontab.txt:/crontab.txt
      - ./certs/conf:/etc/letsencrypt
      - ./frontend/out:/front_dist
    # logging:
      # driver: "none"

volumes:
  mongodb_data_container: